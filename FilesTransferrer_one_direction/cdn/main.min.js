class class_worker{constructor(id,debug=!1){let status="."==id.toString().charAt(0);this.elem=status?document.querySelector(id,toString()):document.getElementById(id.toString()),this.debug=debug}add(class_name){return 0==this.elem.classList.contains(class_name)?(this.elem.classList.add(class_name),this.debug&&console.log(`Class: [${class_name}] added.`)):this.debug&&console.log(`Class: [${class_name}] existed.`),!1}remove(class_name){return this.elem.classList.contains(class_name)?(this.elem.classList.remove(class_name),this.debug&&console.log(`Class: [${class_name}] removed.`)):this.debug&&console.log(`Class: [${class_name}] not found.`),!1}delay_add(class_name,ms){var element=this.elem;let debug=this.debug;setTimeout(()=>{0==element.classList.contains(class_name)?(element.classList.add(class_name),debug&&console.log(`Class: [${class_name}] added by delay after ${ms.toString()}ms.`)):debug&&console.log(`Class: [${class_name}] existed after ${ms.toString()}ms.`)},ms)}delay_remove(class_name,ms){var element=this.elem;let debug=this.debug;setTimeout(()=>{element.classList.contains(class_name)?(element.classList.remove(class_name),debug&&console.log(`Class: [${class_name}] removed by delay after ${ms.toString()}ms.`)):debug&&console.log(`Class: [${class_name}] not found after ${ms.toString()}ms.`)},ms)}}class upload_progress{constructor(n){this.rate=1/n,this.counter=0,this.record=[]}recorder(i){let road=i*this.rate;this.record.push(road);let len=this.record.length;return this.counter=len<2?this.counter+road:this.counter+this.record[len-1]-this.record[len-2],Math.round(this.counter)}refresh(){this.record=[]}}async function upload_files(e,pos){e.preventDefault();const files=e.target[pos].files,len_files=files.length;let progress_bar=new upload_progress(len_files);var config={onUploadProgress:progress=>{let completed=Math.floor(100*progress.loaded/progress.total),progressing=progress_bar.recorder(completed);console.log(`Original: ${completed}`),console.log(`Completed: ${progressing}%`),document.getElementById("progress").innerText=progressing.toString()+"%"},headers:{"Content-Type":"multipart/form-data"}};let BtnController=new class_worker("btn");BtnController.add("noshow");for(let i=0;i<len_files;i++){let data=new FormData;data.append("files",files[i]),console.log(`Start file name: ${files[i].name}`),await axios.post("/uploadfiles",data,config).then(response=>{let re_obj;if(response.data.result){let p=document.createElement("H4");p.innerText="Finished: "+files[i].name+"\n==========================================",document.body.appendChild(p),console.log("=====================")}}).catch(error=>{console.log(error)}),progress_bar.refresh()}let pp=document.createElement("H1");pp.innerText="Finished All Uploading",document.body.appendChild(pp),document.getElementById("uploadForm").reset(),BtnController.remove("noshow")}console.log("Document Ready."),document.getElementById("uploadForm").addEventListener("submit",e=>{upload_files(e,0)});